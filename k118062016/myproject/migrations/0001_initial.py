# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PomeAcknowledgement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('emp_name', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_code', models.CharField(max_length=255, null=True, blank=True)),
                ('join_date', models.DateField(null=True, blank=True)),
                ('receive_date', models.DateField(null=True, blank=True)),
                ('receive_time', models.TimeField(null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
                ('training_cost', models.IntegerField(null=True, blank=True)),
                ('address', models.TextField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('document', models.FileField(null=True, upload_to=b'documents', blank=True)),
                ('recept_no', models.CharField(max_length=255, null=True, blank=True)),
                ('recept_date', models.DateField(null=True, blank=True)),
                ('ack_reference_no', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Acknowledgement',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeAcknowledgementDocuments',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('ackn_id', models.CharField(max_length=255, null=True, blank=True)),
                ('upload_documents', models.FileField(null=True, upload_to=b'documents', blank=True)),
            ],
            options={
                'verbose_name_plural': 'Manage AcknowledgementDocs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeActions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=250, null=True, blank=True)),
                ('code', models.CharField(max_length=250, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Actions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeAdvancesTypes',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('loan_type', models.CharField(max_length=255, null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Advance Types',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeAllowanceMaster',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('gross_salary', models.IntegerField(null=True, blank=True)),
                ('basic_salary', models.IntegerField(null=True, blank=True)),
                ('bonus_val', models.CharField(max_length=255, null=True, blank=True)),
                ('loyality_bonus_val', models.CharField(max_length=52, null=True, blank=True)),
                ('loyality_bonus_period', models.IntegerField(null=True, blank=True)),
                ('bonus_unit', models.CharField(max_length=255, null=True, blank=True)),
                ('hra_val', models.CharField(max_length=255, null=True, blank=True)),
                ('hra_unit', models.CharField(max_length=255, null=True, blank=True)),
                ('others_val', models.CharField(max_length=255, null=True, blank=True)),
                ('others_unit', models.CharField(max_length=255, null=True, blank=True)),
                ('washing_val', models.CharField(max_length=255, null=True, blank=True)),
                ('washing_unit', models.CharField(max_length=255, null=True, blank=True)),
                ('epf_val', models.CharField(max_length=255, null=True, blank=True)),
                ('epf_unit', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Percentage', b'Percentage'), (b'Number', b'Number')])),
                ('epf_emp_val', models.CharField(max_length=255, null=True, blank=True)),
                ('epf_emp_unit', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Percentage', b'Percentage'), (b'Number', b'Number')])),
                ('conveyance_val', models.CharField(max_length=255, null=True, blank=True)),
                ('conveyance_unit', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Percentage', b'Percentage'), (b'Number', b'Number')])),
                ('esi_val', models.CharField(max_length=255, null=True, blank=True)),
                ('esi_unit', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Percentage', b'Percentage'), (b'Number', b'Number')])),
                ('esi_emp_val', models.CharField(max_length=255, null=True, blank=True)),
                ('esi_emp_unit', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Percentage', b'Percentage'), (b'Number', b'Number')])),
                ('percent_basic', models.CharField(max_length=50, null=True, blank=True)),
                ('value_hra', models.CharField(max_length=50, null=True, blank=True)),
                ('value_conveyance', models.CharField(max_length=50, null=True, blank=True)),
                ('value_washing', models.CharField(max_length=50, null=True, blank=True)),
                ('value_bonus', models.CharField(max_length=50, null=True, blank=True)),
                ('value_others', models.CharField(max_length=50, null=True, blank=True)),
                ('perday_wage', models.CharField(max_length=50, null=True, blank=True)),
                ('otallowed', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('ptax_val', models.CharField(max_length=50, null=True, blank=True)),
                ('ptax_unit', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Percentage', b'Percentage'), (b'Number', b'Number')])),
                ('tds_val', models.CharField(max_length=50, null=True, blank=True)),
                ('tds_unit', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Percentage', b'Percentage'), (b'Number', b'Number')])),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Payroll Settings',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeAnnualbonus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('from_month', models.IntegerField(null=True, blank=True)),
                ('to_month', models.IntegerField(null=True, blank=True)),
                ('month_eligible', models.IntegerField(null=True, blank=True)),
                ('limit_months', models.IntegerField(null=True, blank=True)),
                ('percentage', models.FloatField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Annual Bonus',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeBillingTax',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('service_tax', models.CharField(max_length=255, null=True, blank=True)),
                ('edu_cess', models.CharField(max_length=255, null=True, blank=True)),
                ('high_edu_cess', models.CharField(max_length=255, null=True, blank=True)),
                ('swacch_bharat', models.CharField(max_length=10, null=True, blank=True)),
                ('krish_kalyan', models.CharField(max_length=10, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Billing & Tax Settings',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeBiodata',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Direct Employee', b'Direct Employee'), (b'Send to Training', b'Send to Training'), (b'Not Joined', b'Not Joined')])),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('middle_name', models.CharField(max_length=50, null=True, blank=True)),
                ('last_name', models.CharField(max_length=50, null=True, blank=True)),
                ('shortname', models.CharField(max_length=250, null=True, blank=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Male', b'Male'), (b'Female', b'Female')])),
                ('trainee_id', models.CharField(max_length=50, null=True, blank=True)),
                ('mother_name', models.CharField(max_length=255, null=True, blank=True)),
                ('father_name', models.CharField(max_length=255, null=True, blank=True)),
                ('brother_name', models.CharField(max_length=255, null=True, blank=True)),
                ('sister_name', models.CharField(max_length=255, null=True, blank=True)),
                ('fage', models.CharField(max_length=255, null=True, blank=True)),
                ('mage', models.CharField(max_length=255, null=True, blank=True)),
                ('photo', models.ImageField(null=True, upload_to=b'photos', blank=True)),
                ('chest_expanded', models.CharField(max_length=255, null=True, blank=True)),
                ('chest_unexpanded', models.CharField(max_length=255, null=True, blank=True)),
                ('height', models.CharField(max_length=255, null=True, blank=True)),
                ('weight', models.CharField(max_length=255, null=True, blank=True)),
                ('identification_mark', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_village', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_post', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_dist', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_policestation', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_state', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_pincode', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_village', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_post', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_dist', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_policestation', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_state', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_pincode', models.CharField(max_length=255, null=True, blank=True)),
                ('dob', models.DateField(null=True, blank=True)),
                ('telephone', models.CharField(max_length=255, null=True, blank=True)),
                ('caste', models.CharField(blank=True, max_length=255, null=True, choices=[(b'General', b'General'), (b'OBC', b'OBC'), (b'SC', b'SC'), (b'ST', b'ST')])),
                ('religian', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Christian', b'Christian'), (b'Hindu', b'Hindu'), (b'Muslim', b'Muslim'), (b'Sikh', b'Sikh')])),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('bike', models.CharField(max_length=255, null=True, blank=True)),
                ('dlicence', models.CharField(max_length=255, null=True, blank=True)),
                ('dtype', models.CharField(max_length=255, null=True, blank=True)),
                ('licence', models.CharField(max_length=255, null=True, blank=True)),
                ('service_code', models.CharField(max_length=255, null=True, blank=True)),
                ('service_rank', models.CharField(max_length=255, null=True, blank=True)),
                ('service_name', models.CharField(max_length=255, null=True, blank=True)),
                ('brother_no', models.CharField(max_length=255, null=True, blank=True)),
                ('sister_no', models.CharField(max_length=255, null=True, blank=True)),
                ('wife_name', models.CharField(max_length=255, null=True, blank=True)),
                ('wife_age', models.CharField(max_length=255, null=True, blank=True)),
                ('issue', models.CharField(max_length=255, null=True, blank=True)),
                ('year', models.CharField(max_length=255, null=True, blank=True)),
                ('school_college', models.CharField(max_length=255, null=True, blank=True)),
                ('exam_passed', models.CharField(max_length=255, null=True, blank=True)),
                ('subjects', models.CharField(max_length=255, null=True, blank=True)),
                ('division', models.CharField(max_length=255, null=True, blank=True)),
                ('prosecuted', models.CharField(max_length=255, null=True, blank=True)),
                ('other_name1', models.CharField(max_length=255, null=True, blank=True)),
                ('other_name2', models.CharField(max_length=255, null=True, blank=True)),
                ('other_village1', models.CharField(max_length=255, null=True, blank=True)),
                ('other_village2', models.CharField(max_length=255, null=True, blank=True)),
                ('other_post1', models.CharField(max_length=255, null=True, blank=True)),
                ('other_post2', models.CharField(max_length=255, null=True, blank=True)),
                ('other_ps1', models.CharField(max_length=255, null=True, blank=True)),
                ('other_ps2', models.CharField(max_length=255, null=True, blank=True)),
                ('other_dist1', models.CharField(max_length=255, null=True, blank=True)),
                ('other_dist2', models.CharField(max_length=255, null=True, blank=True)),
                ('other_prof1', models.CharField(max_length=255, null=True, blank=True)),
                ('other_prof2', models.CharField(max_length=255, null=True, blank=True)),
                ('other_long1', models.CharField(max_length=255, null=True, blank=True)),
                ('other_long2', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('interview_with', models.CharField(max_length=255, null=True, blank=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('trainer_name', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('training_session', models.CharField(max_length=255, null=True, blank=True)),
                ('date_time', models.DateTimeField(null=True, blank=True)),
                ('emp_sign', models.ImageField(null=True, upload_to=b'photos', blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Bio-Data',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeCalendar',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=160, null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('start', models.DateTimeField(null=True, blank=True)),
                ('end', models.DateTimeField(null=True, blank=True)),
                ('allday', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('color', models.CharField(max_length=7, null=True, blank=True)),
                ('url', models.CharField(max_length=255, null=True, blank=True)),
                ('category', models.CharField(max_length=200, null=True, blank=True)),
                ('repeat_type', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('user_id', models.IntegerField(null=True, blank=True)),
                ('repeat_id', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Every Week', b'Every Week'), (b'Every Day', b'Every Day'), (b'Every Month', b'Every Month')])),
            ],
            options={
                'verbose_name_plural': 'Calendar',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeClientAttendance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('month', models.CharField(max_length=20, null=True, blank=True)),
                ('year', models.CharField(max_length=20, null=True, blank=True)),
                ('one', models.CharField(max_length=20, null=True, blank=True)),
                ('two', models.CharField(max_length=20, null=True, blank=True)),
                ('three', models.CharField(max_length=20, null=True, blank=True)),
                ('four', models.CharField(max_length=20, null=True, blank=True)),
                ('five', models.CharField(max_length=20, null=True, blank=True)),
                ('six', models.CharField(max_length=20, null=True, blank=True)),
                ('seven', models.CharField(max_length=20, null=True, blank=True)),
                ('eight', models.CharField(max_length=20, null=True, blank=True)),
                ('nine', models.CharField(max_length=20, null=True, blank=True)),
                ('ten', models.CharField(max_length=20, null=True, blank=True)),
                ('eleven', models.CharField(max_length=20, null=True, blank=True)),
                ('twelve', models.CharField(max_length=20, null=True, blank=True)),
                ('thirteen', models.CharField(max_length=20, null=True, blank=True)),
                ('fourteen', models.CharField(max_length=20, null=True, blank=True)),
                ('fifteen', models.CharField(max_length=20, null=True, blank=True)),
                ('sixteen', models.CharField(max_length=20, null=True, blank=True)),
                ('seventeen', models.CharField(max_length=20, null=True, blank=True)),
                ('eightteen', models.CharField(max_length=20, null=True, blank=True)),
                ('nineteen', models.CharField(max_length=20, null=True, blank=True)),
                ('twenty', models.CharField(max_length=20, null=True, blank=True)),
                ('twentyone', models.CharField(max_length=20, null=True, blank=True)),
                ('twentytwo', models.CharField(max_length=20, null=True, blank=True)),
                ('twentythree', models.CharField(max_length=20, null=True, blank=True)),
                ('twentyfour', models.CharField(max_length=20, null=True, blank=True)),
                ('twentyfive', models.CharField(max_length=20, null=True, blank=True)),
                ('twentysix', models.CharField(max_length=20, null=True, blank=True)),
                ('twentyseven', models.CharField(max_length=20, null=True, blank=True)),
                ('twentyeight', models.CharField(max_length=20, null=True, blank=True)),
                ('twentynine', models.CharField(max_length=20, null=True, blank=True)),
                ('thirty', models.CharField(max_length=20, null=True, blank=True)),
                ('thirtyone', models.CharField(max_length=20, null=True, blank=True)),
                ('total_hours', models.CharField(max_length=20, null=True, blank=True)),
                ('sessionid', models.CharField(max_length=20, null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Editable Attendance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeClientBilling',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('hour', models.CharField(blank=True, max_length=255, null=True, choices=[(b'8 hours', b'8 hours'), (b'12 hours', b'12 hours')])),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('noofpersons', models.IntegerField(null=True, blank=True)),
                ('rate', models.IntegerField(null=True, blank=True)),
                ('clientrate', models.IntegerField(null=True, blank=True)),
                ('k1rate', models.IntegerField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('todate', models.DateField(null=True, blank=True)),
                ('billingperiod', models.CharField(blank=True, max_length=30, null=True, choices=[(b'Weekly', b'Weekly'), (b'Monthly', b'Monthly'), (b'Quarterly', b'quarterly'), (b'Semi Anually', b'Semi Anually'), (b'Anually', b'Anually')])),
                ('authorised', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Authorised', b'Authorised'), (b'Additional', b'Additional')])),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('supervisor', models.CharField(max_length=255, null=True, blank=True)),
                ('alert_status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('date_time', models.DateTimeField(null=True, blank=True)),
                ('createdby', models.IntegerField(null=True, blank=True)),
                ('updatetime', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Work Order',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeClientBranches',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('branch_name', models.CharField(max_length=255, null=True, blank=True)),
                ('branch_addr', models.CharField(max_length=255, null=True, blank=True)),
                ('branch_tele', models.CharField(max_length=255, null=True, blank=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Client Branches',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeClientInvoice',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('invoice_date', models.DateField(null=True, blank=True)),
                ('invoice_no', models.CharField(max_length=50, null=True, blank=True)),
                ('invnumber', models.IntegerField(null=True, blank=True)),
                ('sub_total', models.IntegerField(null=True, blank=True)),
                ('others', models.IntegerField(null=True, blank=True)),
                ('final_total', models.IntegerField(null=True, blank=True)),
                ('stax', models.IntegerField(null=True, blank=True)),
                ('edu_cess', models.IntegerField(null=True, blank=True)),
                ('high_edu_cess', models.IntegerField(null=True, blank=True)),
                ('swacch_bharat', models.IntegerField(null=True, blank=True)),
                ('krish_kalyan', models.IntegerField(null=True, blank=True)),
                ('total_amount', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('sub_total_authorised', models.IntegerField(null=True, blank=True)),
                ('sub_total_additional', models.IntegerField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('prtstatus', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Paid', b'Paid'), (b'Not Paid', b'Not Paid')])),
            ],
            options={
                'verbose_name_plural': 'Client Invoice ST 14%',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeClientInvoiceTransactions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status_auth', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Authorised', b'Authorised'), (b'Unauthorised', b'Unauthorised')])),
                ('no_of_employees', models.IntegerField(null=True, blank=True)),
                ('hours', models.IntegerField(null=True, blank=True)),
                ('rate', models.IntegerField(null=True, blank=True)),
                ('price', models.IntegerField(null=True, blank=True)),
                ('no_of_employees_want', models.IntegerField(null=True, blank=True)),
                ('no_of_hours_want', models.IntegerField(null=True, blank=True)),
                ('no_of_rate_want', models.IntegerField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Invoice Transactions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeClientPatrolling',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('patrollingno', models.CharField(max_length=50, null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Client Patrolling',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeClientPaymentTransactions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('payment', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Cash', b'Cash'), (b'Cheque', b'Cheque')])),
                ('cqno', models.CharField(max_length=50, null=True, blank=True)),
                ('cqdate', models.DateField(null=True, blank=True)),
                ('bank', models.CharField(max_length=50, null=True, blank=True)),
                ('branch', models.CharField(max_length=50, null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
                ('tds', models.IntegerField(null=True, blank=True)),
                ('otherded', models.IntegerField(null=True, blank=True)),
                ('reason', models.TextField(null=True, blank=True)),
                ('invoice_id', models.ForeignKey(blank=True, to='myproject.PomeClientInvoice', null=True)),
            ],
            options={
                'verbose_name_plural': 'Client Payment Transactions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeConsultancies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('consultancy_name', models.CharField(max_length=50, null=True, blank=True)),
                ('consultancy_address', models.CharField(max_length=250, null=True, blank=True)),
                ('consultancy_phoneno', models.IntegerField(null=True, blank=True)),
                ('consultancy_emailid', models.CharField(max_length=50, null=True, blank=True)),
                ('contactperson_name', models.CharField(max_length=50, null=True, blank=True)),
                ('contactperson_phoneno', models.CharField(max_length=20, null=True, blank=True)),
                ('contactperson_emailid', models.CharField(max_length=20, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
            ],
            options={
                'verbose_name_plural': 'Manage Consultancies',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeCustomerFeedback',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('customer_name', models.CharField(max_length=255, null=True, blank=True)),
                ('customer_address', models.TextField(null=True, blank=True)),
                ('city', models.CharField(max_length=50, null=True, blank=True)),
                ('state', models.CharField(max_length=50, null=True, blank=True)),
                ('incharge_perform', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('guard_perform', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('dressup_rate', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('record_communicate', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('head_office_staff', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('daily_report', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('night_patrolling', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('service_quality', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('lodged_compt', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('complaint', models.TextField(null=True, blank=True)),
                ('improvement', models.TextField(null=True, blank=True)),
                ('remarks', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('date', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Customer Feedback',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeCutSalary',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Cut Salary',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeDefaultAccess',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('permission_id', models.CharField(max_length=255, null=True, blank=True)),
                ('menu_id', models.IntegerField(null=True, blank=True)),
                ('sub_menu_id', models.IntegerField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Default Access',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeDefaultAdvances',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=250, null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('installment_no', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('first_slot', models.IntegerField(null=True, blank=True)),
                ('second_slot', models.IntegerField(null=True, blank=True)),
                ('first_slot_installment', models.IntegerField(null=True, blank=True)),
                ('second_slot_installment', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Default Advances',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeDisciplineCompliance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('group_id', models.IntegerField(null=True, blank=True)),
                ('send_date', models.DateField(null=True, blank=True)),
                ('send_time', models.TimeField(null=True, blank=True)),
                ('subject', models.CharField(max_length=255, null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('priority', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Normal', b'Normal'), (b'Priority', b'Priority'), (b'Serious', b'Serious')])),
                ('alert_status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('date_time', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Discipline & Compliance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeDonation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('donation_date', models.DateField(null=True, blank=True)),
                ('donation_to', models.CharField(max_length=255, null=True, blank=True)),
                ('address', models.TextField(null=True, blank=True)),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_method', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Cash', b'Cash'), (b'Cheque', b'Cheque')])),
                ('cheque_no', models.CharField(max_length=255, null=True, blank=True)),
                ('cheque_date', models.CharField(max_length=255, null=True, blank=True)),
                ('bank_name', models.CharField(max_length=255, null=True, blank=True)),
                ('branch_name', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Donations',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmloyees',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('database_table', models.CharField(max_length=150, null=True, blank=True)),
                ('database_table_id', models.IntegerField(null=True, blank=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('username', models.CharField(max_length=255, null=True, blank=True)),
                ('password', models.CharField(max_length=255, null=True, blank=True)),
                ('type_id', models.CharField(max_length=255, null=True, blank=True)),
                ('employeno', models.CharField(max_length=50, null=True, blank=True)),
                ('department', models.CharField(max_length=255, null=True, blank=True)),
                ('client_location', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('first_location', models.CharField(max_length=255, null=True, blank=True)),
                ('reporting_auth', models.CharField(max_length=255, null=True, blank=True)),
                ('reference_by', models.CharField(max_length=255, null=True, blank=True)),
                ('photo', models.ImageField(null=True, upload_to=b'media/', blank=True)),
                ('firstname', models.CharField(max_length=255, null=True, blank=True)),
                ('middlename', models.CharField(max_length=255, null=True, blank=True)),
                ('lastname', models.CharField(max_length=255, null=True, blank=True)),
                ('shortname', models.CharField(max_length=250, null=True, blank=True)),
                ('joining_date', models.DateField(null=True, blank=True)),
                ('gender', models.CharField(max_length=255, null=True, blank=True)),
                ('home_address1', models.CharField(max_length=255, null=True, blank=True)),
                ('home_address2', models.CharField(max_length=255, null=True, blank=True)),
                ('policestation', models.CharField(max_length=50, null=True, blank=True)),
                ('district', models.CharField(max_length=50, null=True, blank=True)),
                ('city', models.CharField(max_length=255, null=True, blank=True)),
                ('country', models.CharField(max_length=255, null=True, blank=True)),
                ('state', models.CharField(max_length=255, null=True, blank=True)),
                ('zipcode', models.CharField(max_length=255, null=True, blank=True)),
                ('panno', models.CharField(max_length=50, null=True, blank=True)),
                ('aadhar', models.CharField(max_length=50, null=True, blank=True)),
                ('esic', models.CharField(max_length=50, null=True, blank=True)),
                ('epf', models.CharField(max_length=50, null=True, blank=True)),
                ('work_phone', models.CharField(max_length=255, null=True, blank=True)),
                ('work_phoneext', models.CharField(max_length=255, null=True, blank=True)),
                ('home_phone', models.CharField(max_length=255, null=True, blank=True)),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('fax', models.CharField(max_length=255, null=True, blank=True)),
                ('work_email', models.CharField(max_length=255, null=True, blank=True)),
                ('home_email', models.CharField(max_length=255, null=True, blank=True)),
                ('dob', models.DateField(null=True, blank=True)),
                ('birthplace', models.CharField(max_length=255, null=True, blank=True)),
                ('sin_ssn', models.CharField(max_length=255, null=True, blank=True)),
                ('note', models.CharField(max_length=255, null=True, blank=True)),
                ('father_name', models.CharField(max_length=255, null=True, blank=True)),
                ('father_age', models.IntegerField(null=True, blank=True)),
                ('mother_name', models.CharField(max_length=255, null=True, blank=True)),
                ('mother_age', models.IntegerField(null=True, blank=True)),
                ('husband_wife', models.CharField(max_length=255, null=True, blank=True)),
                ('husband_wife_age', models.IntegerField(null=True, blank=True)),
                ('issue', models.CharField(max_length=50, null=True, blank=True)),
                ('brother', models.CharField(max_length=255, null=True, blank=True)),
                ('brother_no', models.CharField(max_length=50, null=True, blank=True)),
                ('sister_no', models.CharField(max_length=50, null=True, blank=True)),
                ('sister', models.CharField(max_length=255, null=True, blank=True)),
                ('years', models.CharField(max_length=255, null=True, blank=True)),
                ('school_college', models.CharField(max_length=255, null=True, blank=True)),
                ('exam_passed', models.CharField(max_length=255, null=True, blank=True)),
                ('subjects', models.CharField(max_length=255, null=True, blank=True)),
                ('division', models.CharField(max_length=255, null=True, blank=True)),
                ('dateofjoining', models.CharField(max_length=255, null=True, blank=True)),
                ('dateofleaving', models.CharField(max_length=255, null=True, blank=True)),
                ('parent_occupation', models.CharField(max_length=255, null=True, blank=True)),
                ('details_employe', models.CharField(max_length=255, null=True, blank=True)),
                ('identification_mark', models.CharField(max_length=255, null=True, blank=True)),
                ('arrested_details', models.CharField(max_length=255, null=True, blank=True)),
                ('requiring_certificate', models.CharField(max_length=255, null=True, blank=True)),
                ('verification_period', models.CharField(max_length=255, null=True, blank=True)),
                ('staying_place', models.CharField(max_length=255, null=True, blank=True)),
                ('eminent_persons', models.CharField(max_length=255, null=True, blank=True)),
                ('eminent_persons2', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.CharField(max_length=255, null=True, blank=True)),
                ('separation_date', models.CharField(max_length=255, null=True, blank=True)),
                ('reason', models.CharField(max_length=255, null=True, blank=True)),
                ('separation_status', models.IntegerField(null=True, blank=True)),
                ('issue_items', models.IntegerField(null=True, blank=True)),
                ('date_time', models.DateTimeField(null=True, blank=True)),
                ('alert_status', models.IntegerField(null=True, blank=True)),
                ('sep_date_time', models.DateTimeField(null=True, blank=True)),
                ('sept_alert', models.IntegerField(null=True, blank=True)),
                ('reference_paid_status', models.IntegerField(null=True, blank=True)),
                ('separation_net_pay', models.FloatField(null=True, blank=True)),
                ('separation_paid_amount', models.FloatField(null=True, blank=True)),
                ('issue_items_count', models.IntegerField(null=True, blank=True)),
                ('pol_ver_time', models.CharField(max_length=50, null=True, blank=True)),
                ('pol_ver_remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('chest_expanded', models.CharField(max_length=255, null=True, blank=True)),
                ('chest_unexpanded', models.CharField(max_length=255, null=True, blank=True)),
                ('height', models.CharField(max_length=255, null=True, blank=True)),
                ('weight', models.CharField(max_length=255, null=True, blank=True)),
                ('caste', models.CharField(blank=True, max_length=255, null=True, choices=[(b'General', b'General'), (b'OBC', b'OBC'), (b'SC', b'SC'), (b'ST', b'ST')])),
                ('religian', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Christian', b'Christian'), (b'Hindu', b'Hindu'), (b'Muslim', b'Muslim'), (b'Sikh', b'Sikh')])),
                ('bike', models.CharField(max_length=255, null=True, blank=True)),
                ('dlicence', models.CharField(max_length=255, null=True, blank=True)),
                ('dtype', models.CharField(max_length=255, null=True, blank=True)),
                ('licence', models.CharField(max_length=255, null=True, blank=True)),
                ('prosecuted', models.CharField(max_length=255, null=True, blank=True)),
                ('service_code', models.CharField(max_length=150, null=True, blank=True)),
                ('service_rank', models.CharField(max_length=255, null=True, blank=True)),
                ('service_name', models.CharField(max_length=150, null=True, blank=True)),
                ('pre_village', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_post', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_dist', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_policestation', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_state', models.CharField(max_length=255, null=True, blank=True)),
                ('pre_pincode', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_village', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_post', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_dist', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_policestation', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_state', models.CharField(max_length=255, null=True, blank=True)),
                ('perm_pincode', models.CharField(max_length=255, null=True, blank=True)),
                ('coming', models.IntegerField(null=True, blank=True)),
                ('cutting', models.IntegerField(null=True, blank=True)),
                ('approve_bonus', models.IntegerField(null=True, blank=True)),
                ('proof_type', models.CharField(max_length=20, null=True, blank=True)),
                ('ot_allowed', models.IntegerField(null=True, blank=True)),
                ('sendsms', models.IntegerField(null=True, blank=True)),
                ('notfield', models.IntegerField(null=True, blank=True)),
                ('emp_sign', models.CharField(max_length=255, null=True, blank=True)),
                ('secondlot', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Add | Manage Employees',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmpAdvances',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('code', models.CharField(max_length=255, null=True, blank=True)),
                ('month', models.CharField(max_length=255, null=True, blank=True)),
                ('opening_balance', models.CharField(max_length=255, null=True, blank=True)),
                ('issued_adv1', models.CharField(max_length=255, null=True, blank=True)),
                ('issued_adv2', models.CharField(max_length=255, null=True, blank=True)),
                ('deduct_adv1', models.CharField(max_length=255, null=True, blank=True)),
                ('deduct_adv2', models.CharField(max_length=255, null=True, blank=True)),
                ('closing_balance', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Employee Advances',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmpLoans',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('type', models.CharField(max_length=255, null=True, blank=True)),
                ('apply_date', models.DateField(null=True, blank=True)),
                ('start_date', models.DateField(null=True, blank=True)),
                ('end_date', models.DateField(null=True, blank=True)),
                ('loan_type', models.CharField(max_length=255, null=True, blank=True)),
                ('loan_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('reason', models.CharField(max_length=11, null=True, blank=True)),
                ('int_apli', models.CharField(max_length=255, null=True, blank=True)),
                ('interest', models.CharField(max_length=255, null=True, blank=True)),
                ('amount_with_interest', models.CharField(max_length=255, null=True, blank=True)),
                ('instalment_no', models.IntegerField(null=True, blank=True)),
                ('instalment_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('approved_on', models.DateField(null=True, blank=True)),
                ('default_advance_id', models.IntegerField(null=True, blank=True)),
                ('training_cost_type', models.IntegerField(null=True, blank=True)),
                ('approval', models.ForeignKey(related_name=b'approval', to='myproject.PomeEmloyees')),
                ('approved_by', models.ForeignKey(related_name=b'approved_by', to='myproject.PomeEmloyees')),
            ],
            options={
                'verbose_name_plural': 'Loans / Advances Approve',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmpLoansTransactions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('type', models.CharField(blank=True, max_length=15, null=True, choices=[(b'Advances', b'Advances'), (b'Training Cost', b'Training Cost')])),
                ('date', models.DateField(null=True, blank=True)),
                ('instalment_amount', models.IntegerField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Paid', b'Paid'), (b'Not Paid', b'Not Paid'), (b'Partly Paid', b'Partly Paid')])),
                ('approve_status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('view_status', models.IntegerField(null=True, blank=True)),
                ('pome_emp_loans_id', models.ForeignKey(blank=True, to='myproject.PomeEmpLoans', null=True)),
                ('pome_employee_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Loans/Advances',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmployeeAttendence',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pome_leaves_absents_id', models.IntegerField(null=True, blank=True)),
                ('applied_for', models.IntegerField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('month_year', models.DateField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Present', b'Present'), (b'Absent', b'Absent'), (b'Leave', b'Leave'), (b'Tour', b'Tour')])),
                ('actual_hours', models.IntegerField(null=True, blank=True)),
                ('hours', models.IntegerField(null=True, blank=True)),
                ('minutes', models.IntegerField(null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('locations_id', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('intime', models.DateTimeField(null=True, blank=True)),
                ('outtime', models.DateTimeField(null=True, blank=True)),
                ('latitude', models.CharField(max_length=30, null=True, blank=True)),
                ('longitude', models.CharField(max_length=30, null=True, blank=True)),
                ('out_latitude', models.CharField(max_length=30, null=True, blank=True)),
                ('out_longitude', models.CharField(max_length=30, null=True, blank=True)),
                ('inphoto', models.ImageField(null=True, upload_to=b'photos', blank=True)),
                ('outphoto', models.ImageField(null=True, upload_to=b'photos', blank=True)),
            ],
            options={
                'verbose_name_plural': 'Employee Attendance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmployeeCtc',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('ctc_name', models.CharField(max_length=255, null=True, blank=True)),
                ('ctc_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Employee CTC',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmployeeExpenditure',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('acc_type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Savings', b'Savings'), (b'Current', b'Current'), (b'Others', b'Others')])),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('account_id', models.CharField(max_length=255, null=True, blank=True)),
                ('auth_person', models.CharField(max_length=255, null=True, blank=True)),
                ('expenditure_name', models.CharField(max_length=255, null=True, blank=True)),
                ('purpose', models.TextField(null=True, blank=True)),
                ('expenditure_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('expenditure_date', models.DateField(null=True, blank=True)),
                ('upload', models.FileField(null=True, upload_to=b'documents', blank=True)),
                ('reference_no', models.CharField(max_length=255, null=True, blank=True)),
                ('approver', models.CharField(max_length=255, null=True, blank=True)),
                ('approved_by', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Employee Expenditure',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmployeeMovement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('hours', models.IntegerField(null=True, blank=True)),
                ('auto_work_order_no', models.CharField(max_length=50, null=True, blank=True)),
                ('order_number', models.IntegerField(null=True, blank=True)),
                ('order_designation', models.CharField(max_length=250, null=True, blank=True)),
                ('order_date', models.DateField(null=True, blank=True)),
                ('order_time', models.TimeField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('from_time', models.TimeField(null=True, blank=True)),
                ('to_time', models.TimeField(null=True, blank=True)),
                ('reason', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'New', b'New'), (b'Transfer', b'Transfer')])),
                ('job_status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Permanent', b'Permanent'), (b'Temporary', b'Temporary')])),
                ('exc_site', models.IntegerField(null=True, blank=True)),
                ('old_site', models.IntegerField(null=True, blank=True)),
                ('allowance', models.CharField(max_length=20, null=True, blank=True)),
                ('reach_update', models.DateTimeField(null=True, blank=True)),
                ('alert_status', models.IntegerField(null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('reporting_date', models.DateField(null=True, blank=True)),
                ('reporting_time', models.TimeField(max_length=50, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
            ],
            options={
                'verbose_name_plural': 'Employee Movement',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmployeePosting',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('emp_name', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_code', models.CharField(max_length=255, null=True, blank=True)),
                ('moveto_client', models.CharField(max_length=255, null=True, blank=True)),
                ('client_branch', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('order_by', models.CharField(max_length=255, null=True, blank=True)),
                ('order_date', models.DateField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('reason', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Employee Posting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmployeeSeparations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('separation_net_pay', models.FloatField(null=True, blank=True)),
                ('total_earnings', models.FloatField(null=True, blank=True)),
                ('epf_esi', models.FloatField(null=True, blank=True)),
                ('adp', models.FloatField(null=True, blank=True)),
                ('ldp', models.FloatField(null=True, blank=True)),
                ('other_deductions', models.FloatField(null=True, blank=True)),
                ('sub_total', models.FloatField(null=True, blank=True)),
                ('mess', models.FloatField(null=True, blank=True)),
                ('total_amount', models.FloatField(null=True, blank=True)),
                ('message', models.FloatField(null=True, blank=True)),
                ('training_cost', models.FloatField(null=True, blank=True)),
                ('others_recovery', models.FloatField(null=True, blank=True)),
                ('acknowledge', models.FloatField(null=True, blank=True)),
                ('separation_paid_amount', models.FloatField(null=True, blank=True)),
                ('payment_type', models.CharField(max_length=50, null=True, blank=True)),
                ('cqno', models.CharField(max_length=50, null=True, blank=True)),
                ('cqdate', models.DateField(null=True, blank=True)),
                ('bank', models.CharField(max_length=150)),
                ('branch', models.CharField(max_length=150)),
                ('online_type', models.CharField(max_length=150)),
                ('reference_number', models.CharField(max_length=150)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('pome_employees_id', models.ForeignKey(to='myproject.PomeEmloyees')),
            ],
            options={
                'verbose_name_plural': 'Employee Separation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEmployeeSettlement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('emp_name', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_code', models.CharField(max_length=255, null=True, blank=True)),
                ('settlement_amt', models.CharField(max_length=255, null=True, blank=True)),
                ('paid_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('balance_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('settlement_status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Paid', b'Paid'), (b'Not Paid', b'Not Paid')])),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Employee Settlement',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEodForward',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'EOD Forward',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeEodManagement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('eod_subject', models.TextField(null=True, blank=True)),
                ('eod_data', models.TextField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('sended_on', models.DateTimeField(null=True, blank=True)),
                ('eod_by', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'EOD Management',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeExcessAttendance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('day_balance', models.CharField(max_length=50, blank=True)),
                ('rota_entry', models.CharField(max_length=50, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('date_entered', models.DateField(null=True, blank=True)),
                ('employee_id', models.ForeignKey(related_name=b'employee_id', blank=True, to='myproject.PomeEmloyees', null=True)),
                ('entered', models.ForeignKey(related_name=b'entered', blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Excess Attendance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeExcessLocAttendance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('day_balance', models.CharField(max_length=50, null=True, blank=True)),
                ('rota_entry', models.CharField(max_length=50, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('date_entered', models.DateField(null=True, blank=True)),
                ('employee_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('entered', models.ForeignKey(related_name=b'entereeed', blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Rota Exceeded',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeFinalReport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('attire', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('punctuality', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('behaviour', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('tabacco', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('command', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('drill', models.CharField(blank=True, max_length=25, null=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5')])),
                ('recom', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Selected', b'Selected'), (b'Not_Selected', b'Not_Selected')])),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('biodata_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Final Report',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeFine',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('link', models.CharField(max_length=50, null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Fine',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeFineDeductions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('apply_date', models.DateField(null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
                ('others', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('emp_id', models.ForeignKey(related_name=b'eemp_id', to='myproject.PomeEmloyees', null=True)),
                ('pot', models.ForeignKey(related_name=b'pot', to='myproject.PomeEmloyees', null=True)),
                ('selc_fine_ids', models.ForeignKey(blank=True, to='myproject.PomeFine', null=True)),
            ],
            options={
                'verbose_name_plural': 'Employee Fine',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeGallery',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('gallery_type', models.CharField(max_length=255, null=True, blank=True)),
                ('image', models.ImageField(null=True, upload_to=b'photos', blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Gallery',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeGatepass',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('gatepass_type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Stock', b'Stock'), (b'Employees', b'Employees')])),
                ('out_date', models.DateField(null=True, blank=True)),
                ('out_time', models.TimeField(null=True, blank=True)),
                ('in_date', models.DateField(null=True, blank=True)),
                ('in_time', models.TimeField(null=True, blank=True)),
                ('gateno', models.CharField(max_length=255, null=True, blank=True)),
                ('purpose', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_code', models.CharField(max_length=255, null=True, blank=True)),
                ('gatepass_no', models.CharField(max_length=255, null=True, blank=True)),
                ('gpnumber', models.IntegerField(null=True, blank=True)),
                ('approver', models.CharField(max_length=255, null=True, blank=True)),
                ('stock_to', models.CharField(max_length=255, null=True, blank=True)),
                ('srno', models.CharField(max_length=255, null=True, blank=True)),
                ('particulars', models.CharField(max_length=255, null=True, blank=True)),
                ('quantity', models.CharField(max_length=255, null=True, blank=True)),
                ('inventoryno', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('department', models.CharField(max_length=255, null=True, blank=True)),
                ('splinstruction', models.CharField(max_length=255, null=True, blank=True)),
                ('update_remarks', models.CharField(max_length=60, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('date_time', models.DateTimeField(null=True, blank=True)),
                ('first_emp', models.IntegerField(null=True, blank=True)),
                ('cancel_remarks', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Employee Gatepass',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeGraderateSetting',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('grade_name', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Grade A', b'Grade A'), (b'Grade B', b'Grade B'), (b'Grade C', b'Grade C'), (b'Grade D', b'Grade D')])),
                ('rate', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Graderate Setting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeGuardPlacement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('employe_name', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('post_from', models.DateField(null=True, blank=True)),
                ('post_to', models.DateField(null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Guard Placement',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeHolidays',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('holiday', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Full Day', b'Full Day'), (b'Half Day', b'Half Day')])),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
            ],
            options={
                'verbose_name_plural': 'Holidays',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeIncentive',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateField(null=True, blank=True)),
                ('purpose', models.CharField(max_length=255, null=True, blank=True)),
                ('totamount', models.IntegerField(null=True, blank=True)),
                ('generated_id', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Designation Incentive Setting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeIncentiveLoc',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('purpose', models.CharField(max_length=255, null=True, blank=True)),
                ('totamount', models.IntegerField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateField(null=True, blank=True)),
                ('generated_id', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Location Wise Incentive',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInnermenus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('submenu_id', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=150, null=True, blank=True)),
                ('link', models.CharField(max_length=150, null=True, blank=True)),
                ('is_active', models.IntegerField(null=True, blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInvoicePaymentDelete',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('payment', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Cash', b'Cash'), (b'Cheque', b'Cheque')])),
                ('cqno', models.CharField(max_length=50, null=True, blank=True)),
                ('cqdate', models.DateField(null=True, blank=True)),
                ('bank', models.CharField(max_length=50, null=True, blank=True)),
                ('branch', models.CharField(max_length=50, null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
                ('tds', models.IntegerField(null=True, blank=True)),
                ('otherded', models.IntegerField(null=True, blank=True)),
                ('reason', models.CharField(max_length=50, null=True, blank=True)),
                ('entered', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('invoice_id', models.ForeignKey(blank=True, to='myproject.PomeClientInvoice', null=True)),
            ],
            options={
                'verbose_name_plural': 'Invoice Payment Delete',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInward',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Partially Received', b'Partially Received'), (b'Partially Received and Cancelled', b'Partially Cancelled'), (b'Cancelled', b'Cancelled')])),
                ('pome_purchase_requisition_id', models.IntegerField(null=True, blank=True)),
                ('pome_inward_id', models.IntegerField(null=True, blank=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('ordered', models.IntegerField(null=True, blank=True)),
                ('received', models.IntegerField(null=True, blank=True)),
                ('price', models.IntegerField(null=True, blank=True)),
                ('total_amount', models.IntegerField(null=True, blank=True)),
                ('paid_amount', models.IntegerField(null=True, blank=True)),
                ('exceed', models.IntegerField(null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('courier_type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Couries', b'Courier'), (b'Transport', b'Transport'), (b'Person', b'Person')])),
                ('courier_name', models.CharField(max_length=250, null=True, blank=True)),
                ('pod_number', models.CharField(max_length=250, null=True, blank=True)),
                ('driver_number_plate', models.CharField(max_length=250, null=True, blank=True)),
                ('driver_name', models.CharField(max_length=250, null=True, blank=True)),
                ('driver_contact', models.CharField(max_length=250, null=True, blank=True)),
                ('per_name', models.CharField(max_length=250, null=True, blank=True)),
                ('per_contact', models.CharField(max_length=250, null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('inward_type', models.CharField(max_length=50, null=True, blank=True)),
                ('alert_status', models.IntegerField(null=True, blank=True)),
                ('invoice_no', models.ForeignKey(blank=True, to='myproject.PomeClientInvoice', null=True)),
            ],
            options={
                'verbose_name_plural': 'Inward Others',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInwardDocuments',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('upload_documents', models.FileField(null=True, upload_to=b'documents', blank=True)),
                ('inward_id', models.ForeignKey(blank=True, to='myproject.PomeInward', null=True)),
            ],
            options={
                'verbose_name_plural': 'Inward Documents',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInwardInvoice',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('date', models.DateField(null=True, blank=True)),
                ('total_amount', models.IntegerField(null=True, blank=True)),
                ('paid_amount', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('invoice_no', models.ForeignKey(blank=True, to='myproject.PomeClientInvoice', null=True)),
            ],
            options={
                'verbose_name_plural': 'Inward Invoice',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInwardOutwardCourier',
            fields=[
                ('guid', models.IntegerField(serialize=False, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Couries', b'Courier'), (b'Transport', b'Transport'), (b'Person', b'Person')])),
                ('date', models.DateField(null=True, blank=True)),
                ('from_field', models.CharField(max_length=250, null=True, blank=True)),
                ('to', models.CharField(max_length=250, null=True, blank=True)),
                ('courier_type', models.CharField(max_length=250, null=True, blank=True)),
                ('courier_name', models.CharField(max_length=250, null=True, blank=True)),
                ('pod_number', models.CharField(max_length=250, null=True, blank=True)),
                ('received_by', models.CharField(max_length=250, null=True, blank=True)),
                ('dateandtime_delivery', models.DateTimeField(null=True, blank=True)),
                ('courier_particulars', models.TextField(null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('date_added', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Inward Outward Courier',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInwardOutwardFixedAssets',
            fields=[
                ('guid', models.IntegerField(serialize=False, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Couries', b'Courier'), (b'Transport', b'Transport'), (b'Person', b'Person')])),
                ('fixed_date', models.DateField(null=True, blank=True)),
                ('fixed_visitor_name', models.CharField(max_length=250, null=True, blank=True)),
                ('fixed_from', models.CharField(max_length=250, null=True, blank=True)),
                ('fixed_contact', models.CharField(max_length=250, null=True, blank=True)),
                ('fixed_email', models.CharField(max_length=250, null=True, blank=True)),
                ('fixed_whom', models.CharField(max_length=250, null=True, blank=True)),
                ('fixed_purpose', models.CharField(max_length=250, null=True, blank=True)),
                ('fixed_issued_entry_pass', models.CharField(max_length=250, null=True, blank=True)),
                ('fixed_issued_ppe', models.CharField(max_length=250, null=True, blank=True)),
                ('date_added', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Inward Outward Fixed Assets',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeInwardOutwardMaterial',
            fields=[
                ('guid', models.IntegerField(serialize=False, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Couries', b'Courier'), (b'Transport', b'Transport'), (b'Person', b'Person')])),
                ('receipts_date', models.DateField(null=True, blank=True)),
                ('receipts_invoice_number', models.CharField(max_length=250, null=True, blank=True)),
                ('receipts_received_from', models.CharField(max_length=250, null=True, blank=True)),
                ('receipts_quantity', models.CharField(max_length=250, null=True, blank=True)),
                ('receipts_cumulative', models.CharField(max_length=250, null=True, blank=True)),
                ('receipts_remarks', models.TextField(null=True, blank=True)),
                ('issues_date', models.DateField(null=True, blank=True)),
                ('issues_requisition_no', models.CharField(max_length=250, null=True, blank=True)),
                ('issues_issued_to', models.CharField(max_length=250, null=True, blank=True)),
                ('issues_quantity', models.CharField(max_length=250, null=True, blank=True)),
                ('issues_cumulative', models.CharField(max_length=250, null=True, blank=True)),
                ('issues_remarks', models.CharField(max_length=250, null=True, blank=True)),
                ('net_balance', models.CharField(max_length=250, null=True, blank=True)),
                ('date_added', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Inward Outward Materials',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeIssuance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_username', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_code', models.CharField(max_length=255, null=True, blank=True)),
                ('join_date', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('supervisor', models.CharField(max_length=255, null=True, blank=True)),
                ('issuance_date', models.CharField(max_length=255, null=True, blank=True)),
                ('quantity', models.CharField(max_length=255, null=True, blank=True)),
                ('value', models.CharField(max_length=255, null=True, blank=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Issuance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeItemDesignationwise',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('second', models.IntegerField(null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Item According To Designation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeItemRequisition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Assignment', b'Assignment'), (b'Individual', b'Individual')])),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('issuance_type', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Free', b'Free'), (b'Discount', b'Discount')])),
                ('discount', models.CharField(max_length=255, null=True, blank=True)),
                ('discountval', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_name', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_code', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('supervisor', models.CharField(max_length=255, null=True, blank=True)),
                ('request_date', models.DateField(null=True, blank=True)),
                ('unit_price', models.CharField(max_length=255, null=True, blank=True)),
                ('quantity', models.CharField(max_length=255, null=True, blank=True)),
                ('value', models.CharField(max_length=255, null=True, blank=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('reason', models.CharField(max_length=255, null=True, blank=True)),
                ('approve_date', models.DateField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Approved', b'Approved'), (b'Rejected', b'Rejected')])),
                ('stores_status', models.IntegerField(null=True, blank=True)),
                ('returned', models.IntegerField(null=True, blank=True)),
                ('remaining', models.IntegerField(null=True, blank=True)),
                ('designationwise', models.IntegerField(null=True, blank=True)),
                ('penality_amount', models.IntegerField(null=True, blank=True)),
                ('returned_date', models.DateField(null=True, blank=True)),
                ('timestamp', models.DateTimeField(null=True, blank=True)),
                ('approver', models.ForeignKey(related_name=b'approver', blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Item Requisition',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeK1Details',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('st_no', models.CharField(max_length=255, null=True, blank=True)),
                ('pan_no', models.CharField(max_length=255, null=True, blank=True)),
                ('epf_no', models.CharField(max_length=255, null=True, blank=True)),
                ('esi_no', models.CharField(max_length=255, null=True, blank=True)),
                ('cin_no', models.CharField(max_length=255, null=True, blank=True)),
                ('company_name', models.CharField(max_length=255, null=True, blank=True)),
                ('address', models.CharField(max_length=255, null=True, blank=True)),
                ('phone', models.CharField(max_length=255, null=True, blank=True)),
                ('fax', models.CharField(max_length=255, null=True, blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
                ('invioce_no', models.CharField(max_length=255, null=True, blank=True)),
                ('service_tax', models.CharField(max_length=255, null=True, blank=True)),
                ('edu_cess', models.CharField(max_length=255, null=True, blank=True)),
                ('high_edu_cess', models.CharField(max_length=255, null=True, blank=True)),
                ('condition1', models.TextField(null=True, blank=True)),
                ('condition2', models.TextField(null=True, blank=True)),
                ('condition3', models.TextField(null=True, blank=True)),
                ('condition4', models.TextField(null=True, blank=True)),
                ('condition5', models.TextField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'K1 Details',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLeaveManagement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('leave_name', models.CharField(max_length=255, null=True, blank=True)),
                ('leave_code', models.CharField(max_length=50, null=True, blank=True)),
                ('payment', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Paid', b'Paid'), (b'Unpaid', b'Unpaid')])),
                ('noofleaves', models.IntegerField(null=True, blank=True)),
                ('emp_apply', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('emp_beyond', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('leavetype', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Leave Accrue', b'Leave Accrue'), (b'Carried Forward', b'Carried Forward')])),
                ('percentage', models.IntegerField(null=True, blank=True)),
                ('stop_period', models.IntegerField(null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Leave Types',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLeavePeriod',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('timestamp', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Leave Period',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLeavesAbsents',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Approved', b'Approved'), (b'Not Approved', b'Not Approved')])),
                ('date', models.DateField(null=True, blank=True)),
                ('father_name', models.CharField(max_length=255, null=True, blank=True)),
                ('applied_for', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Casual Leave', b'Casual Leave'), (b'Sick Leave', b'Sick Leave'), (b'Previlage Leave', b'Previlage Leave')])),
                ('applied_month', models.CharField(blank=True, max_length=25, null=True, choices=[(b'January', b'January'), (b'February', b'February'), (b'March', b'March'), (b'April', b'April'), (b'May', b'May'), (b'June', b'June'), (b'July', b'July'), (b'August', b'August'), (b'September', b'September'), (b'October', b'October'), (b'November', b'November'), (b'December', b'December')])),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('reason_for', models.TextField(null=True, blank=True)),
                ('send_to', models.CharField(max_length=255, null=True, blank=True)),
                ('contact_at', models.CharField(max_length=255, null=True, blank=True)),
                ('contact_po', models.CharField(max_length=255, null=True, blank=True)),
                ('contact_dist', models.CharField(max_length=255, null=True, blank=True)),
                ('contact_phone', models.CharField(max_length=255, null=True, blank=True)),
                ('date_time', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Leaves Absents',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLoansAdvances',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('loan_limit', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Loan/Advance Limit Setting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLoansCalculation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('loan_id', models.CharField(max_length=255, null=True, blank=True)),
                ('loan_type', models.CharField(max_length=255, null=True, blank=True)),
                ('loan_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('inst_month', models.CharField(max_length=255, null=True, blank=True)),
                ('inst_no', models.CharField(max_length=255, null=True, blank=True)),
                ('inst_paid', models.CharField(max_length=255, null=True, blank=True)),
                ('inst_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('balance', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('emp_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Loans Calculation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLoanTypes',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('loan_type', models.CharField(max_length=255, null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('type', models.CharField(max_length=50, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Loan Types',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLocationIncentive',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Location Not Incentive',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLocationIncharge',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Location Incharge',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLocationInchargeSalaries',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('total_amount', models.IntegerField(null=True, blank=True)),
                ('thousands', models.IntegerField(null=True, blank=True)),
                ('fivehundreds', models.IntegerField(null=True, blank=True)),
                ('hundreds', models.IntegerField(null=True, blank=True)),
                ('fifties', models.IntegerField(null=True, blank=True)),
                ('twenties', models.IntegerField(null=True, blank=True)),
                ('tens', models.IntegerField(null=True, blank=True)),
                ('fives', models.IntegerField(null=True, blank=True)),
                ('twos', models.IntegerField(null=True, blank=True)),
                ('ones', models.IntegerField(null=True, blank=True)),
                ('generated_id', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('emp_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Location Incharge Salaries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLocationsalarySettings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Location Salary Settings',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLocdesg',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('designation', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Location Designation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLocDesgMaster',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('basic', models.CharField(max_length=50, null=True, blank=True)),
                ('hra', models.CharField(max_length=50, null=True, blank=True)),
                ('conveyance', models.CharField(max_length=50, null=True, blank=True)),
                ('others', models.CharField(max_length=50, null=True, blank=True)),
                ('epf', models.CharField(max_length=50, null=True, blank=True)),
                ('esi', models.CharField(max_length=50, null=True, blank=True)),
                ('perday_wage', models.CharField(max_length=50, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Location Designation Master',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLocpayIncentive',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('perday', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
                ('generated_id', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Location Pay Incentive',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLoginDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('send_to', models.CharField(max_length=255, null=True, blank=True)),
                ('subject', models.CharField(max_length=255, null=True, blank=True)),
                ('messages', models.TextField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Login Details',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLogins',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('username', models.CharField(max_length=250, null=True, blank=True)),
                ('password', models.CharField(max_length=250, null=True, blank=True)),
                ('type', models.CharField(max_length=250, null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('pome_emloyees_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Logins',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeLoyalityBonous',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('loyality_bonous', models.CharField(max_length=255, null=True, blank=True)),
                ('loyality_period', models.CharField(max_length=25, choices=[(b'6 months', b'6 months'), (b'1 year', b'1 year'), (b'2 years', b'2 years'), (b'3 years', b'3 years'), (b'4 years', b'4 years'), (b'5 years', b'5 years')])),
                ('description', models.TextField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Loyality Bonus',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeManageClients',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('login_type', models.CharField(max_length=255, null=True, blank=True)),
                ('profile_pic', models.ImageField(null=True, upload_to=b'photos', blank=True)),
                ('clientid', models.IntegerField(null=True, blank=True)),
                ('client_name', models.CharField(max_length=255, null=True, blank=True)),
                ('client_code_num', models.IntegerField(null=True, blank=True)),
                ('client_code', models.CharField(max_length=50, null=True, blank=True)),
                ('username', models.CharField(max_length=50, null=True, blank=True)),
                ('password', models.CharField(max_length=50, null=True, blank=True)),
                ('propreitor', models.CharField(max_length=255, null=True, blank=True)),
                ('entry_date', models.DateField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('authorised_person', models.CharField(max_length=255, null=True, blank=True)),
                ('auth_designation', models.CharField(max_length=50, null=True, blank=True)),
                ('authorised_email', models.CharField(max_length=20, null=True, blank=True)),
                ('authorised_phone', models.CharField(max_length=50, null=True, blank=True)),
                ('authorised_mobile', models.CharField(max_length=50, null=True, blank=True)),
                ('panno', models.CharField(max_length=50, null=True, blank=True)),
                ('tanno', models.CharField(max_length=50, null=True, blank=True)),
                ('service_tax', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Tax Applicable', b'Tax Applicable'), (b'Tax Not Applicable', b'Tax Not Applicable')])),
                ('country', models.CharField(max_length=50, null=True, blank=True)),
                ('site_incharge', models.CharField(max_length=255, null=True, blank=True)),
                ('guard_deployement', models.DateField(null=True, blank=True)),
                ('rate', models.CharField(max_length=255, null=True, blank=True)),
                ('client_location', models.CharField(max_length=255, null=True, blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
                ('telephone', models.CharField(max_length=255, null=True, blank=True)),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('address', models.TextField(null=True, blank=True)),
                ('city', models.CharField(max_length=255, null=True, blank=True)),
                ('district', models.CharField(max_length=50, null=True, blank=True)),
                ('state', models.CharField(max_length=255, null=True, blank=True)),
                ('zipcode', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateField(null=True, blank=True)),
                ('stax', models.CharField(max_length=20, null=True, blank=True)),
                ('created', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Add | Manage Clients',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeManageClientsLocations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=250)),
                ('loc_name', models.CharField(max_length=50, null=True, blank=True)),
                ('address', models.CharField(max_length=50, null=True, blank=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('username', models.CharField(max_length=50, null=True, blank=True)),
                ('password', models.CharField(max_length=50, null=True, blank=True)),
                ('entry_date', models.DateField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('authorised_person', models.CharField(max_length=250, null=True, blank=True)),
                ('panno', models.CharField(max_length=20, null=True, blank=True)),
                ('tanno', models.CharField(max_length=20, null=True, blank=True)),
                ('auth_designation', models.CharField(max_length=20, null=True, blank=True)),
                ('guard_deployement', models.DateField(null=True, blank=True)),
                ('email', models.CharField(max_length=50, null=True, blank=True)),
                ('telephone', models.CharField(max_length=20, null=True, blank=True)),
                ('mobile', models.CharField(max_length=20, null=True, blank=True)),
                ('city', models.CharField(max_length=20, null=True, blank=True)),
                ('state', models.CharField(max_length=20, null=True, blank=True)),
                ('zipcode', models.CharField(max_length=20, null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('stax', models.CharField(max_length=20, null=True, blank=True)),
                ('login_type', models.IntegerField(null=True, blank=True)),
                ('created', models.IntegerField(null=True, blank=True)),
                ('cid', models.ForeignKey(to='myproject.PomeManageClients')),
            ],
            options={
                'verbose_name_plural': 'Manage Client Locations',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeManageDepartments',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=250, null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Manage Departments',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeManageItems',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('item_code', models.CharField(max_length=255, null=True, blank=True)),
                ('item_name', models.CharField(max_length=255, null=True, blank=True)),
                ('itemtype', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Individual', b'Individual'), (b'Assignment', b'Assignment')])),
                ('category', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Raw Material', b'Raw Material'), (b'Ready To Use', b'Ready To Use')])),
                ('measurement', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Pieces', b'Pieces'), (b'Meters', b'Meters'), (b'Kilogram', b'Kilogram'), (b'Litres', b'Litres')])),
                ('threshold_limit', models.CharField(max_length=255, null=True, blank=True)),
                ('unit_price', models.CharField(max_length=255, null=True, blank=True)),
                ('charge_price', models.CharField(max_length=50, null=True, blank=True)),
                ('days1', models.CharField(max_length=255, null=True, blank=True)),
                ('threshold_to2', models.CharField(max_length=255, null=True, blank=True)),
                ('days2', models.CharField(max_length=255, null=True, blank=True)),
                ('days3', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('timestamp', models.DateTimeField(null=True, blank=True)),
                ('initiated_by', models.IntegerField(null=True, blank=True)),
                ('stockitem', models.IntegerField(null=True, blank=True)),
                ('threshold_to1', models.ForeignKey(related_name=b'threshold_to1', to='myproject.PomeEmloyees')),
                ('threshold_to3', models.ForeignKey(related_name=b'threshold_to3', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Add Item',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeManageMasters',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('dept_id', models.CharField(max_length=100, null=True, blank=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('description', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Manage Masters',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeManageQuotation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('branch', models.CharField(max_length=255, null=True, blank=True)),
                ('subject', models.CharField(max_length=255, null=True, blank=True)),
                ('authorised', models.CharField(max_length=255, null=True, blank=True)),
                ('additional', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('client', models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
                ('work_order_no', models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True)),
            ],
            options={
                'verbose_name_plural': 'Add | Manage Quotation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeManageStores',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('store_name', models.CharField(max_length=255, null=True, blank=True)),
                ('address', models.TextField(null=True, blank=True)),
                ('contact_no', models.CharField(max_length=255, null=True, blank=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
            ],
            options={
                'verbose_name_plural': 'Manage Stores',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeMasters',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('master_name', models.CharField(max_length=255, null=True, blank=True)),
                ('master_desc', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Masters Type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeMenus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=150, null=True, blank=True)),
                ('link', models.CharField(max_length=150, null=True, blank=True)),
                ('icon', models.CharField(max_length=150, null=True, blank=True)),
                ('is_active', models.IntegerField(null=True, blank=True)),
                ('sub_menu', models.IntegerField(null=True, blank=True)),
                ('actions_id', models.IntegerField(null=True, blank=True)),
                ('inner_menu', models.IntegerField(null=True, blank=True)),
                ('sub_menu_id', models.IntegerField(null=True, blank=True)),
                ('menu_id', models.IntegerField(null=True, blank=True)),
                ('employee', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Menu',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeMobilePatrolling',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('time1', models.TimeField(null=True, blank=True)),
                ('time2', models.TimeField(null=True, blank=True)),
                ('time3', models.TimeField(null=True, blank=True)),
                ('time4', models.TimeField(null=True, blank=True)),
                ('time5', models.TimeField(null=True, blank=True)),
                ('time6', models.TimeField(null=True, blank=True)),
                ('time7', models.TimeField(null=True, blank=True)),
                ('call_1', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('call_2', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('call_3', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('call_4', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('call_5', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('call_6', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('call_7', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('clientid', models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True)),
                ('employeeid', models.ForeignKey(related_name=b'employeeid', blank=True, to='myproject.PomeEmloyees', null=True)),
                ('patrolling_person', models.ForeignKey(related_name=b'patrolling_person', to='myproject.PomeEmloyees')),
            ],
            options={
                'verbose_name_plural': 'Mobile Patrolling',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeMoneytransferPettycash',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('petty_account', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('approver', models.CharField(max_length=255, null=True, blank=True)),
                ('approved_by', models.CharField(max_length=255, null=True, blank=True)),
                ('approved_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Money Tranfer Petty Cash',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeNoticeboard',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('subject', models.CharField(max_length=255, null=True, blank=True)),
                ('message', models.CharField(max_length=255, null=True, blank=True)),
                ('post_to', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Employees', b'Employees'), (b'Vendors', b'Vendors'), (b'Clients', b'Clients')])),
                ('priority', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Normal', b'Normal'), (b'Urgent', b'Urgent')])),
                ('from_date', models.DateField(null=True, blank=True)),
                ('to_date', models.DateField(null=True, blank=True)),
                ('notice_type', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Notice Board', b'Notice Board'), (b'SMS', b'SMS'), (b'Email', b'Email')])),
                ('alert_status', models.IntegerField(null=True, blank=True)),
                ('date_time', models.DateTimeField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('post_count', models.ForeignKey(related_name=b'get_employees', to='myproject.PomeEmloyees', null=True)),
                ('send_by', models.ForeignKey(related_name=b'send_by', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Notice Board',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeNotifications',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('notification', models.CharField(max_length=255, null=True, blank=True)),
                ('type', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Notifications',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeOtherBenefits',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('benefit_name', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Other Benefits',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeOutward',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('status', models.CharField(max_length=250, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('time', models.TimeField(null=True, blank=True)),
                ('gatepass_no', models.CharField(max_length=50, null=True, blank=True)),
                ('invoice_no', models.CharField(max_length=250, null=True, blank=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Courier', b'Courier'), (b'Transport', b'Transport'), (b'Person', b'Person')])),
                ('courier_name', models.CharField(max_length=250, null=True, blank=True)),
                ('pod_number', models.CharField(max_length=250, null=True, blank=True)),
                ('number_plate', models.CharField(max_length=250, null=True, blank=True)),
                ('driver_name', models.CharField(max_length=255, null=True, blank=True)),
                ('driver_contact', models.CharField(max_length=255, null=True, blank=True)),
                ('ref_nonref', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Refundable', b'Refundable'), (b'Non Refundable', b'Non Refundable')])),
                ('quantity', models.CharField(max_length=255, null=True, blank=True)),
                ('value', models.CharField(max_length=255, null=True, blank=True)),
                ('reason', models.CharField(max_length=255, null=True, blank=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('approve', models.IntegerField(null=True, blank=True)),
                ('date_time', models.DateTimeField(null=True, blank=True)),
                ('alert_status', models.IntegerField(null=True, blank=True)),
                ('approver', models.ForeignKey(related_name=b'approver_name', to='myproject.PomeEmloyees', null=True)),
                ('items', models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True)),
                ('per_name', models.ForeignKey(related_name=b'per_name', to='myproject.PomeEmloyees', null=True)),
                ('stock_to', models.ForeignKey(related_name=b'stock_to', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Outward Management',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeOvertime',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('total_hours_ot', models.IntegerField(null=True, blank=True)),
                ('total_hours', models.IntegerField(null=True, blank=True)),
                ('absent_count', models.IntegerField(null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('total_days', models.IntegerField(null=True, blank=True)),
                ('leave_count', models.IntegerField(null=True, blank=True)),
                ('overtime_hours', models.IntegerField(null=True, blank=True)),
                ('own_ot', models.IntegerField(null=True, blank=True)),
                ('inctot', models.IntegerField(null=True, blank=True)),
                ('tots', models.IntegerField(null=True, blank=True)),
                ('generated_id', models.IntegerField(null=True, blank=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
                ('pome_emloyees_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('work_order', models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True)),
            ],
            options={
                'verbose_name_plural': 'Incentive Disbursement',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeOvertimeGenerated',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('page', models.IntegerField(null=True, blank=True)),
                ('page_limit', models.IntegerField(null=True, blank=True)),
                ('page_current_limit', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Overtime Generated',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeOvertimePayment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('payment', models.CharField(max_length=50, null=True, blank=True)),
                ('cqno', models.CharField(max_length=50, null=True, blank=True)),
                ('cqdate', models.DateField(null=True, blank=True)),
                ('bank', models.CharField(max_length=50, null=True, blank=True)),
                ('branch', models.CharField(max_length=50, null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
                ('voucherno', models.CharField(max_length=50, null=True, blank=True)),
                ('status', models.CharField(max_length=50, null=True, blank=True)),
                ('employee_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('ot_id', models.ForeignKey(to='myproject.PomeOvertime')),
            ],
            options={
                'verbose_name_plural': 'Overtime Payment',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePatrolling',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('patrolling_time', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Day', b'Day'), (b'Night', b'Night')])),
                ('code', models.CharField(max_length=255, null=True, blank=True)),
                ('dress_up', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_belt', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_tie', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_shoes', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('b_polish', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('cap_batch', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_cap', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_whistle', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_saving', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_haircut', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('sleeping', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('post_out', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_icard', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('wear_socks', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('dozzing', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('tabaco', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('date', models.DateField(null=True, blank=True)),
                ('loc_assign', models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True)),
                ('name', models.ForeignKey(related_name=b'name', to='myproject.PomeEmloyees', null=True)),
                ('patrolling_officer', models.ForeignKey(related_name=b'officer1', to='myproject.PomeEmloyees', null=True)),
                ('patrolling_officer2', models.ForeignKey(related_name=b'officer2', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Patrolling Day/Night',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePattycashAccounts',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('account_name', models.CharField(max_length=255, null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('auth_person', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Petty Cash Accounts',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePayment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('branch_name', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_date', models.DateField(null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_type', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_status', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('client_name', models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True)),
                ('work_order', models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True)),
            ],
            options={
                'verbose_name_plural': 'Payment to Vendor',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePaymentCollection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Vendor', b'Vendor'), (b'Workshop', b'Workshop')])),
                ('date', models.DateField(null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'NEFT', b'NEFT'), (b'RTGS', b'RTGS')])),
                ('payment_status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Cash', b'Cash'), (b'Cheque', b'Cheque'), (b'Online Payment', b'Online Payment')])),
                ('cqno', models.CharField(max_length=50, null=True, blank=True)),
                ('cqdate', models.CharField(max_length=50, null=True, blank=True)),
                ('bank', models.CharField(max_length=50, null=True, blank=True)),
                ('branch', models.CharField(max_length=50, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
                ('company_id', models.ForeignKey(blank=True, to='myproject.PomeK1Details', null=True)),
            ],
            options={
                'verbose_name_plural': 'Payment Collection',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePaymentReceiptIncharge',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('salary', models.IntegerField(null=True, blank=True)),
                ('incentive', models.IntegerField(null=True, blank=True)),
                ('barekrent', models.IntegerField(null=True, blank=True)),
                ('others', models.IntegerField(null=True, blank=True)),
                ('subtotal', models.IntegerField(null=True, blank=True)),
                ('advance', models.IntegerField(null=True, blank=True)),
                ('balance', models.IntegerField(null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('thousands', models.IntegerField(null=True, blank=True)),
                ('fivehundreds', models.IntegerField(null=True, blank=True)),
                ('hundreds', models.IntegerField(null=True, blank=True)),
                ('fifties', models.IntegerField(null=True, blank=True)),
                ('twenties', models.IntegerField(null=True, blank=True)),
                ('tens', models.IntegerField(null=True, blank=True)),
                ('fives', models.IntegerField(null=True, blank=True)),
                ('twos', models.IntegerField(null=True, blank=True)),
                ('ones', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Pending', b'Pending'), (b'Completed', b'Completed')])),
                ('remarks', models.TextField(null=True, blank=True)),
                ('final_amount', models.IntegerField(null=True, blank=True)),
                ('achead', models.ForeignKey(related_name=b'achead', to='myproject.PomeEmloyees', null=True)),
                ('paidby', models.ForeignKey(related_name=b'paidby', to='myproject.PomeEmloyees', null=True)),
                ('prepared_by', models.ForeignKey(related_name=b'prepared_by', to='myproject.PomeEmloyees', null=True)),
                ('receivedby', models.ForeignKey(related_name=b'receivedby', to='myproject.PomeEmloyees', null=True)),
                ('siteincharge', models.ForeignKey(related_name=b'site_incharge', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salary Release Update',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePaymentsTransfers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('database_table', models.CharField(max_length=50, null=True, blank=True)),
                ('database_table_id', models.IntegerField(null=True, blank=True)),
                ('paid_amount', models.IntegerField(null=True, blank=True)),
                ('invoice_number', models.CharField(max_length=150, null=True, blank=True)),
                ('payment_type', models.CharField(max_length=50, null=True, blank=True)),
                ('cqno', models.CharField(max_length=50, null=True, blank=True)),
                ('cqdate', models.DateField(null=True, blank=True)),
                ('bank', models.CharField(max_length=250, null=True, blank=True)),
                ('branch', models.CharField(max_length=250, null=True, blank=True)),
                ('online_type', models.CharField(max_length=250, null=True, blank=True)),
                ('reference_number', models.CharField(max_length=250, null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Payment Transfers',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePayscaleSetting',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('below_salary', models.CharField(max_length=255, null=True, blank=True)),
                ('full_salary', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
            ],
            options={
                'verbose_name_plural': 'Payscale Settings',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePoliceVerificationForm',
            fields=[
                ('guid', models.IntegerField(serialize=False, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('full_name', models.CharField(max_length=250, null=True, blank=True)),
                ('father_name', models.CharField(max_length=250, null=True, blank=True)),
                ('present_address', models.TextField(null=True, blank=True)),
                ('permanent_address', models.TextField(null=True, blank=True)),
                ('residence_no', models.CharField(max_length=250, null=True, blank=True)),
                ('office_no', models.CharField(max_length=250, null=True, blank=True)),
                ('mobile_no', models.CharField(max_length=250, null=True, blank=True)),
                ('date_of_birth', models.DateField(null=True, blank=True)),
                ('place_of_birth', models.CharField(max_length=250, null=True, blank=True)),
                ('family_father', models.CharField(max_length=250, null=True, blank=True)),
                ('family_mother', models.CharField(max_length=250, null=True, blank=True)),
                ('family_husband', models.CharField(max_length=250, null=True, blank=True)),
                ('family_brother', models.CharField(max_length=250, null=True, blank=True)),
                ('family_sister', models.CharField(max_length=250, null=True, blank=True)),
                ('parent_occupation', models.CharField(max_length=250, null=True, blank=True)),
                ('fullname_of_the_employer', models.CharField(max_length=250, null=True, blank=True)),
                ('identification_mark', models.TextField(null=True, blank=True)),
                ('arrested', models.CharField(max_length=250, null=True, blank=True)),
                ('purpose_for_requiring', models.TextField(null=True, blank=True)),
                ('period_of_verification', models.CharField(max_length=250, null=True, blank=True)),
                ('place_of_stay', models.CharField(max_length=250, null=True, blank=True)),
                ('locality_verification', models.CharField(max_length=250)),
                ('date_added', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Police Verification Form',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePurchaseOrder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('item_price', models.CharField(max_length=255, null=True, blank=True)),
                ('quantity', models.CharField(max_length=255, null=True, blank=True)),
                ('refno', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('delivery_date', models.DateField(null=True, blank=True)),
                ('delivery_mode', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_mode', models.CharField(max_length=255, null=True, blank=True)),
                ('credit_days', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_type', models.CharField(max_length=255, null=True, blank=True)),
                ('discount', models.CharField(max_length=255, null=True, blank=True)),
                ('approved_by', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
                ('initiated_by', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('item_name', models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True)),
                ('store_id', models.ForeignKey(blank=True, to='myproject.PomeManageStores', null=True)),
            ],
            options={
                'verbose_name_plural': 'Purchase Order',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomePurchaseRequisition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Approved', b'Approved'), (b'Rejected', b'Rejected'), (b'Clarified', b'Clarified'), (b'Question', b'Question')])),
                ('added_on', models.DateField(null=True, blank=True)),
                ('orderno', models.CharField(max_length=255, null=True, blank=True)),
                ('orderno_value', models.IntegerField(null=True, blank=True)),
                ('price', models.CharField(max_length=255, null=True, blank=True)),
                ('quantity', models.CharField(max_length=255, null=True, blank=True)),
                ('value', models.CharField(max_length=255, null=True, blank=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('approved_by', models.CharField(max_length=255, null=True, blank=True)),
                ('approved_on', models.CharField(max_length=255, null=True, blank=True)),
                ('info1', models.IntegerField(null=True, blank=True)),
                ('day1', models.IntegerField(null=True, blank=True)),
                ('info2', models.IntegerField(null=True, blank=True)),
                ('day2', models.IntegerField(null=True, blank=True)),
                ('info3', models.IntegerField(null=True, blank=True)),
                ('day3', models.IntegerField(null=True, blank=True)),
                ('timestamp', models.DateTimeField(null=True, blank=True)),
                ('clarify', models.TextField(null=True, blank=True)),
                ('answer', models.TextField(null=True, blank=True)),
                ('initiated_by', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('items', models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True)),
                ('store_id', models.ForeignKey(blank=True, to='myproject.PomeManageStores', null=True)),
            ],
            options={
                'verbose_name_plural': 'Purchase Requisition',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeReferenceIncentive',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('date', models.DateField(null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Reference Incentive Setting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeReferencePayment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Paid', b'Paid'), (b'Unpaid', b'Unpaid')])),
                ('month_year', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.DateTimeField(null=True, blank=True)),
                ('emp_id', models.ForeignKey(related_name=b'emp_id', to='myproject.PomeEmloyees', null=True)),
                ('reference_id', models.ForeignKey(related_name=b'reference_id', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Reference Payment',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeReturnStock',
            fields=[
                ('pid', models.IntegerField(serialize=False, primary_key=True)),
                ('type', models.CharField(max_length=50, null=True, blank=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('returned_stock', models.IntegerField(null=True, blank=True)),
                ('remarks_stock', models.TextField(null=True, blank=True)),
                ('reason_stock', models.CharField(blank=True, max_length=30, null=True, choices=[(b'Damaged', b'Damaged'), (b'Emp Resigned', b'Emp Resigned'), (b'Expiry', b'Expiry')])),
                ('reusable', models.CharField(blank=True, max_length=30, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('penality_charges', models.CharField(blank=True, max_length=30, null=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')])),
                ('penality_amount_stock', models.IntegerField(null=True, blank=True)),
                ('returned_date_stock', models.DateField(null=True, blank=True)),
                ('siteincharge', models.IntegerField(null=True, blank=True)),
                ('status_add', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('designation_id', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
                ('employee_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('item_id', models.ForeignKey(blank=True, to='myproject.PomePurchaseOrder', null=True)),
                ('pome_item_requisition_id', models.ForeignKey(blank=True, to='myproject.PomePurchaseRequisition', null=True)),
            ],
            options={
                'verbose_name_plural': 'Return Stock',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeReturnStockVendor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('quantity', models.IntegerField(null=True, blank=True)),
                ('unit_price', models.IntegerField(null=True, blank=True)),
                ('price', models.IntegerField(null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('mode', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Courier', b'Courier'), (b'Transport', b'Transport'), (b'Person', b'Person')])),
                ('courier_no', models.CharField(max_length=150, null=True, blank=True)),
                ('return_date', models.DateField(null=True, blank=True)),
                ('reference_no', models.CharField(max_length=100, null=True, blank=True)),
                ('approved_by', models.CharField(max_length=150, null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('courier_name', models.CharField(max_length=50, null=True, blank=True)),
                ('pod_number', models.CharField(max_length=50, null=True, blank=True)),
                ('number_plate', models.CharField(max_length=50, null=True, blank=True)),
                ('driver_name', models.CharField(max_length=50, null=True, blank=True)),
                ('driver_contact', models.CharField(max_length=50, null=True, blank=True)),
                ('per_name', models.CharField(max_length=50, null=True, blank=True)),
                ('return_time', models.CharField(max_length=50, null=True, blank=True)),
                ('gatepass_no', models.CharField(max_length=50, null=True, blank=True)),
                ('in_date', models.DateField(null=True, blank=True)),
                ('in_time', models.TimeField(null=True, blank=True)),
                ('remarks_gp', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Refundable', b'Refundable'), (b'Non Refundable', b'Non Refundable')])),
                ('item_id', models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True)),
            ],
            options={
                'verbose_name_plural': 'Return Stock To Vendor',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSalaries',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('supervisor', models.IntegerField(null=True, blank=True)),
                ('month_year', models.CharField(max_length=50, null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('work_days', models.IntegerField(null=True, blank=True)),
                ('paid_leaves', models.IntegerField(null=True, blank=True)),
                ('total_days', models.IntegerField(null=True, blank=True)),
                ('total_hours', models.FloatField(null=True, blank=True)),
                ('basic', models.IntegerField(null=True, blank=True)),
                ('cal_basic', models.FloatField(null=True, blank=True)),
                ('hra', models.FloatField(null=True, blank=True)),
                ('washing', models.FloatField(null=True, blank=True)),
                ('other', models.FloatField(null=True, blank=True)),
                ('bonus', models.FloatField(null=True, blank=True)),
                ('annual_bonus', models.FloatField(null=True, blank=True)),
                ('loyality_bonus', models.FloatField(null=True, blank=True)),
                ('total_allowances', models.FloatField(null=True, blank=True)),
                ('epf', models.FloatField(null=True, blank=True)),
                ('esi', models.FloatField(null=True, blank=True)),
                ('fines', models.IntegerField(null=True, blank=True)),
                ('advances', models.FloatField(null=True, blank=True)),
                ('loans', models.FloatField(null=True, blank=True)),
                ('other_deductions', models.FloatField(null=True, blank=True)),
                ('total_deductions', models.FloatField(null=True, blank=True)),
                ('net_pay', models.FloatField(null=True, blank=True)),
                ('payment_status', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Paid', b'Paid'), (b'Not Paid', b'Not Paid')])),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('generated_id', models.IntegerField(null=True, blank=True)),
                ('conveyance', models.FloatField(null=True, blank=True)),
                ('pt', models.FloatField(null=True, blank=True)),
                ('tds', models.IntegerField(null=True, blank=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
                ('pome_emloyees_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('work_order', models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salaries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSalariesGenerated',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('from_date', models.DateField(null=True, blank=True)),
                ('from_month', models.IntegerField(null=True, blank=True)),
                ('from_year', models.IntegerField(null=True, blank=True)),
                ('to_date', models.IntegerField(null=True, blank=True)),
                ('to_month', models.IntegerField(null=True, blank=True)),
                ('to_year', models.IntegerField(null=True, blank=True)),
                ('from_final_date', models.DateField(null=True, blank=True)),
                ('to_final_date', models.DateField(null=True, blank=True)),
                ('from_year_month', models.CharField(max_length=250, null=True, blank=True)),
                ('to_year_month', models.CharField(max_length=250, null=True, blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('page', models.IntegerField(null=True, blank=True)),
                ('page_limit', models.IntegerField(null=True, blank=True)),
                ('page_current_limit', models.IntegerField(null=True, blank=True)),
                ('otnot', models.IntegerField(null=True, blank=True)),
                ('otallow', models.IntegerField(null=True, blank=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salary Generation Field',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSalaryDisbursement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('salary_type', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_to', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_name', models.CharField(max_length=255, null=True, blank=True)),
                ('emp_code', models.CharField(max_length=255, null=True, blank=True)),
                ('salary_month', models.CharField(max_length=255, null=True, blank=True)),
                ('salary', models.CharField(max_length=255, null=True, blank=True)),
                ('incentive', models.CharField(max_length=255, null=True, blank=True)),
                ('voucher', models.CharField(max_length=255, null=True, blank=True)),
                ('house_rent', models.CharField(max_length=255, null=True, blank=True)),
                ('loan_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('absent_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('overtime_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('final_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('paid_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('balance_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('client_id', models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
                ('emp_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salary Disbursement',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSalaryFixed',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('amount', models.CharField(max_length=255, null=True, blank=True)),
                ('designation', models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salary Fixed',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSalaryPaymentTransactions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('voucherno', models.CharField(max_length=50, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('payment', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Cash', b'Cash'), (b'Cheque', b'Cheque')])),
                ('cqno', models.CharField(max_length=50, null=True, blank=True)),
                ('cqdate', models.DateField(null=True, blank=True)),
                ('bank', models.CharField(max_length=50, null=True, blank=True)),
                ('branch', models.CharField(max_length=50, null=True, blank=True)),
                ('amount', models.IntegerField(null=True, blank=True)),
                ('pome_emloyees_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('salary_id', models.ForeignKey(blank=True, to='myproject.PomeSalaries', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salary Payment Transactions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSalAssignment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('month', models.IntegerField(null=True, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('salary', models.FloatField(null=True, blank=True)),
                ('payment_salary', models.FloatField(null=True, blank=True)),
                ('balance_salary', models.FloatField(null=True, blank=True)),
                ('incentive', models.FloatField(null=True, blank=True)),
                ('payment_incentive', models.FloatField(null=True, blank=True)),
                ('balance_incentive', models.FloatField(null=True, blank=True)),
                ('house_rent', models.FloatField(null=True, blank=True)),
                ('payment_house_rent', models.FloatField(null=True, blank=True)),
                ('balance_house_rent', models.FloatField(null=True, blank=True)),
                ('voucher', models.FloatField(null=True, blank=True)),
                ('payment_ottotal', models.FloatField(null=True, blank=True)),
                ('balance_ottotal', models.FloatField(null=True, blank=True)),
                ('others', models.FloatField(null=True, blank=True)),
                ('payment_others', models.FloatField(null=True, blank=True)),
                ('balance_others', models.FloatField(null=True, blank=True)),
                ('totamount', models.FloatField(null=True, blank=True)),
                ('payment_totamount', models.FloatField(null=True, blank=True)),
                ('balance_totamount', models.FloatField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('client_name', models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True)),
                ('supervisor', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('work_order_no', models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salary Assignment',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSalAssignmentEmps',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('net_pay', models.FloatField(null=True, blank=True)),
                ('hra', models.FloatField(null=True, blank=True)),
                ('ot_got', models.FloatField(null=True, blank=True)),
                ('paid_mess', models.FloatField(null=True, blank=True)),
                ('cash_return', models.FloatField(null=True, blank=True)),
                ('incentive_ind', models.FloatField(null=True, blank=True)),
                ('net_pay_total', models.FloatField(null=True, blank=True)),
                ('hra_total', models.FloatField(null=True, blank=True)),
                ('ot_got_total', models.FloatField(null=True, blank=True)),
                ('incentive_ind_total', models.FloatField(null=True, blank=True)),
                ('paid_mess_total', models.FloatField(null=True, blank=True)),
                ('pome_emloyees_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('psa_id', models.ForeignKey(blank=True, to='myproject.PomeSalAssignment', null=True)),
            ],
            options={
                'verbose_name_plural': 'Salary Assignments Employees',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeScaleDifference',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('scale_difference', models.CharField(max_length=255, null=True, blank=True)),
                ('effective_date', models.DateField(null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Scale Difference',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSendsms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.IntegerField(null=True, blank=True)),
                ('message', models.TextField(null=True, blank=True)),
                ('sms_no', models.CharField(max_length=255, null=True, blank=True)),
                ('number', models.IntegerField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('time', models.TimeField(null=True, blank=True)),
                ('send_to', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Send SMS',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSeparations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('separation_date', models.DateField(null=True, blank=True)),
                ('joining_date', models.DateField(null=True, blank=True)),
                ('vintage', models.CharField(max_length=255, null=True, blank=True)),
                ('separation_type', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Terminated', b'Terminated'), (b'Retirement', b'Retirement'), (b'Resigned', b'Resigned')])),
                ('reason', models.TextField(null=True, blank=True)),
                ('designation', models.ForeignKey(to='myproject.PomeManageMasters')),
                ('employees_id', models.ForeignKey(to='myproject.PomeEmloyees')),
            ],
            options={
                'verbose_name_plural': 'Separation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeShifts',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('shift_name', models.CharField(max_length=255, null=True, blank=True)),
                ('from_time', models.CharField(max_length=255, null=True, blank=True)),
                ('to_time', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Shifts',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeStaffType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('emp_type', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Office Staff', b'Office Staff'), (b'Special Field', b'Special Field')])),
                ('employee_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Staff Type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeStipendDisbursement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=25, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('payment_amt', models.CharField(max_length=255, null=True, blank=True)),
                ('paid_amount', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('payment_method', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Cash', b'Cash'), (b'Cheque', b'Cheque')])),
                ('cheque_no', models.CharField(max_length=255, null=True, blank=True)),
                ('cheque_date', models.CharField(max_length=255, null=True, blank=True)),
                ('bank_name', models.CharField(max_length=255, null=True, blank=True)),
                ('branch_name', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Stipend Disbursements',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeStipendTrainee',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('training_days', models.CharField(max_length=255, null=True, blank=True)),
                ('perday_price', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Stipend Trainee',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeStocks',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantity', models.IntegerField(null=True, blank=True)),
                ('date_added', models.DateTimeField(null=True, blank=True)),
                ('items', models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True)),
                ('store_id', models.ForeignKey(blank=True, to='myproject.PomeManageStores', null=True)),
            ],
            options={
                'verbose_name_plural': 'Stocks',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeStocksTransactions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantity', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
                ('status_add', models.IntegerField(null=True, blank=True)),
                ('vendor_status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('employee_id', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
                ('pome_item_requisition_id', models.ForeignKey(blank=True, to='myproject.PomeItemRequisition', null=True)),
                ('pome_return_stock_id', models.ForeignKey(blank=True, to='myproject.PomeReturnStock', null=True)),
                ('pome_stocks_id', models.ForeignKey(blank=True, to='myproject.PomeStocks', null=True)),
                ('store_id', models.ForeignKey(blank=True, to='myproject.PomeManageStores', null=True)),
            ],
            options={
                'verbose_name_plural': 'Stocks Transactions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeStockUpdate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=250, null=True, blank=True)),
                ('invoice_date', models.DateField(null=True, blank=True)),
                ('quantity', models.IntegerField(null=True, blank=True)),
                ('invoiceno', models.ForeignKey(blank=True, to='myproject.PomeClientInvoice', null=True)),
                ('item', models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True)),
            ],
            options={
                'verbose_name_plural': 'Update Stock',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSubmenus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('menu_id', models.CharField(max_length=255, null=True, blank=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('link', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(max_length=255, null=True, blank=True)),
                ('inner_menu', models.IntegerField(null=True, blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSuperAdmin',
            fields=[
                ('super_admin_id', models.IntegerField(serialize=False, primary_key=True)),
                ('username', models.CharField(max_length=50, null=True, blank=True)),
                ('password', models.CharField(max_length=50, null=True, blank=True)),
                ('email', models.CharField(max_length=100, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Super Admin',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeSupporticket',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('subject', models.CharField(max_length=255, null=True, blank=True)),
                ('message', models.TextField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Approved', b'Approved'), (b'Cancelled', b'Cancelled'), (b'Wait For Approval', b'Wait For Approval')])),
                ('sended_on', models.DateTimeField(null=True, blank=True)),
                ('update_message', models.TextField(null=True, blank=True)),
                ('update_status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Approved', b'Approved'), (b'Cancelled', b'Cancelled'), (b'Wait For Approval', b'Wait For Approval')])),
                ('image', models.ImageField(null=True, upload_to=b'support-images/', blank=True)),
                ('empid', models.ForeignKey(related_name=b'empid', to='myproject.PomeEmloyees', null=True)),
                ('mail_from', models.ForeignKey(related_name=b'mail_from', to='myproject.PomeEmloyees', null=True)),
                ('name', models.ForeignKey(related_name=b'mail_name', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Support Ticket',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeTaskManagement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('task', models.CharField(max_length=255, null=True, blank=True)),
                ('task_summery', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Completed', b'Completed'), (b'Pending', b'Pending')])),
                ('assigned_on', models.DateField(null=True, blank=True)),
                ('assigned_time', models.TimeField(null=True, blank=True)),
                ('time_duration', models.DateTimeField(null=True, blank=True)),
                ('start_time', models.CharField(max_length=50, null=True, blank=True)),
                ('end_time', models.CharField(max_length=255, null=True, blank=True)),
                ('time_taken', models.CharField(max_length=255, null=True, blank=True)),
                ('start_date', models.DateField(null=True, blank=True)),
                ('starttime', models.TimeField(null=True, blank=True)),
                ('date_time', models.DateTimeField(null=True, blank=True)),
                ('priority', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Normal', b'Normal'), (b'Priority', b'Priority'), (b'Urgent', b'Urgent')])),
                ('taskremarks', models.TextField(null=True, blank=True)),
                ('assign_to', models.ForeignKey(related_name=b'assigned_to', to='myproject.PomeEmloyees', null=True)),
                ('assigned_by', models.ForeignKey(related_name=b'assigned_by', to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Task Management',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeTraineeAttendence',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('code', models.CharField(max_length=255, null=True, blank=True)),
                ('date', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('trainee_id', models.ForeignKey(blank=True, to='myproject.PomeBiodata', null=True)),
            ],
            options={
                'verbose_name_plural': 'Trainee Attendance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeTrainer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('trainer_name', models.CharField(max_length=255, null=True, blank=True)),
                ('phone', models.CharField(max_length=255, null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Trainer Settings',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeTrainingSession',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('session_name', models.CharField(max_length=255, null=True, blank=True)),
                ('place', models.CharField(max_length=255, null=True, blank=True)),
                ('session_straingth', models.CharField(max_length=255, null=True, blank=True)),
                ('total_days', models.CharField(max_length=255, null=True, blank=True)),
                ('training_dates', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateTimeField(null=True, blank=True)),
                ('perday_price', models.CharField(max_length=255, null=True, blank=True)),
                ('trainer_name', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Training Sessions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeUpload',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Photo', b'Photo'), (b'Signature', b'Signature')])),
                ('upload', models.ImageField(null=True, upload_to=b'photos', blank=True)),
                ('employee', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Photo or Signature Upload',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeUploadWorkorder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('branch', models.CharField(max_length=255, null=True, blank=True)),
                ('order_name', models.CharField(max_length=255, null=True, blank=True)),
                ('order_no', models.CharField(max_length=255, null=True, blank=True)),
                ('order_date', models.DateField(null=True, blank=True)),
                ('order_price', models.CharField(max_length=255, null=True, blank=True)),
                ('order_upload', models.FileField(null=True, upload_to=b'documents', blank=True)),
                ('client_name', models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True)),
            ],
            options={
                'verbose_name_plural': 'Upload Workorder',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeUserAccess',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('user_id', models.CharField(max_length=255, null=True, blank=True)),
                ('permission_id', models.CharField(max_length=255, null=True, blank=True)),
                ('menu_id', models.IntegerField(null=True, blank=True)),
                ('sub_menu_id', models.IntegerField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'User Access',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeUserPermission',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('permission_name', models.CharField(max_length=255, null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'User Permission',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeUsersLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('login_type', models.CharField(blank=True, max_length=255, null=True, choices=[(b'User', b'User'), (b'Client', b'Client'), (b'Vendor', b'Vendor')])),
                ('login_id', models.CharField(max_length=255, null=True, blank=True)),
                ('login_time', models.DateTimeField(null=True, blank=True)),
                ('logout_time', models.DateTimeField(null=True, blank=True)),
                ('loggedip', models.CharField(max_length=255, null=True, blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Users Log',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeVendorWorkshop',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('login_type', models.CharField(blank=True, max_length=50, null=True, choices=[(b'Vendor', b'Vendor'), (b'Workshop', b'Workshop')])),
                ('profile_pic', models.CharField(max_length=255, null=True, blank=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Vendor', b'Vendor'), (b'Workshop', b'Workshop')])),
                ('company_vendor_name', models.CharField(max_length=255, null=True, blank=True)),
                ('username', models.CharField(max_length=50, null=True, blank=True)),
                ('password', models.CharField(max_length=50, null=True, blank=True)),
                ('vendor_code', models.CharField(max_length=50, null=True, blank=True)),
                ('registration_no', models.CharField(max_length=255, null=True, blank=True)),
                ('company_type', models.CharField(blank=True, max_length=255, null=True, choices=[(b'Private Limited', b'Private Limited'), (b'Public Limited', b'Public Limited'), (b'Soul Propreitor', b'Soul Propreitor'), (b'Partnership', b'Partnership'), (b'Others', b'Others')])),
                ('agreement_date', models.DateField(null=True, blank=True)),
                ('purpose', models.CharField(max_length=50, null=True, blank=True)),
                ('regd_office_addr', models.CharField(max_length=255, null=True, blank=True)),
                ('city', models.CharField(max_length=255, null=True, blank=True)),
                ('district', models.CharField(max_length=255, null=True, blank=True)),
                ('state', models.CharField(max_length=255, null=True, blank=True)),
                ('country', models.CharField(max_length=255, null=True, blank=True)),
                ('pin_code', models.CharField(max_length=255, null=True, blank=True)),
                ('company_email', models.CharField(max_length=255, null=True, blank=True)),
                ('company_telephone', models.CharField(max_length=255, null=True, blank=True)),
                ('fax', models.CharField(max_length=255, null=True, blank=True)),
                ('amc_period', models.CharField(max_length=50, null=True, blank=True)),
                ('tin_tan', models.CharField(max_length=255, null=True, blank=True)),
                ('service_tax', models.CharField(max_length=50, null=True, blank=True)),
                ('bank_details', models.TextField(null=True, blank=True)),
                ('bank', models.CharField(max_length=255, null=True, blank=True)),
                ('ac_no', models.CharField(max_length=255, null=True, blank=True)),
                ('ifsc_no', models.CharField(max_length=255, null=True, blank=True)),
                ('branch', models.CharField(max_length=255, null=True, blank=True)),
                ('bank_type', models.CharField(blank=True, max_length=25, null=True, choices=[(b'Savings', b'Savings'), (b'Current', b'Current'), (b'Others', b'Others')])),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('pan_no', models.CharField(max_length=255, null=True, blank=True)),
                ('designation', models.CharField(max_length=255, null=True, blank=True)),
                ('email', models.CharField(max_length=255, null=True, blank=True)),
                ('contact_no', models.CharField(max_length=255, null=True, blank=True)),
                ('mobile', models.CharField(max_length=255, null=True, blank=True)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('added_on', models.DateField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Add | Manage Vendor/Workshop',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeVisitor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('parentid', models.CharField(max_length=255, null=True, blank=True)),
                ('visitor_name', models.CharField(max_length=250, null=True, blank=True)),
                ('from_company', models.CharField(max_length=250, null=True, blank=True)),
                ('from_address', models.TextField(null=True, blank=True)),
                ('contact_number', models.CharField(max_length=255, null=True, blank=True)),
                ('emailid', models.CharField(max_length=250, null=True, blank=True)),
                ('purpose', models.TextField(null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('time', models.TimeField(null=True, blank=True)),
                ('avaliability', models.CharField(blank=True, max_length=10, null=True, choices=[(b'Available', b'Available'), (b'Not Available', b'Not Available')])),
                ('alternate_person', models.IntegerField(null=True, blank=True)),
                ('date_added', models.DateField(null=True, blank=True)),
                ('alert_status', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('visit_date_time', models.DateTimeField(null=True, blank=True)),
                ('update_person', models.CharField(max_length=100, null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('out_time', models.TimeField(null=True, blank=True)),
                ('staff_guid', models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True)),
            ],
            options={
                'verbose_name_plural': 'Visitor Management',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PomeWashings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('start_amount', models.IntegerField(null=True, blank=True)),
                ('end_amount', models.IntegerField(null=True, blank=True)),
                ('limit_amount', models.IntegerField(null=True, blank=True)),
                ('limit_amount_months', models.IntegerField(null=True, blank=True)),
                ('limit_months', models.IntegerField(null=True, blank=True)),
                ('datetime', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Washings',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='pomestockstransactions',
            name='vendor_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomestocks',
            name='vendor_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomestipendtrainee',
            name='session_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeTrainingSession', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomestipendtrainee',
            name='trainer_name',
            field=models.ForeignKey(blank=True, to='myproject.PomeTrainer', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomestipenddisbursement',
            name='session_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeTrainingSession', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomestipenddisbursement',
            name='trainee_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeBiodata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomereturnstockvendor',
            name='vendor_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomepurchaserequisition',
            name='vendor',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomepurchaseorder',
            name='vendor',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomepaymentstransfers',
            name='vendor_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomepaymentcollection',
            name='company_name',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomepaymentcollection',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomemanagemasters',
            name='master_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomemanageclients',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocpayincentive',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocpayincentive',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocdesgmaster',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocdesg',
            name='desg_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocationsalarysettings',
            name='clientid',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocationsalarysettings',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocationsalarysettings',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocationincharge',
            name='client_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocationincharge',
            name='employee_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomelocationincharge',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeloansadvances',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeleavesabsents',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeleavesabsents',
            name='name',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeitemrequisition',
            name='department',
            field=models.ForeignKey(related_name=b'dept', blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeitemrequisition',
            name='designation',
            field=models.ForeignKey(related_name=b'design', blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeitemrequisition',
            name='items',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeitemrequisition',
            name='pome_emloyees_id',
            field=models.ForeignKey(related_name=b'pome_emloyees_id', to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeitemrequisition',
            name='store_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageStores', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeitemdesignationwise',
            name='designation_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeitemdesignationwise',
            name='items_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeissuance',
            name='department',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeissuance',
            name='emp_name',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeissuance',
            name='items',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageItems', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeinwardinvoice',
            name='vendor_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeinward',
            name='items',
            field=models.ForeignKey(to='myproject.PomeManageItems', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeinward',
            name='pome_inward_invoice_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeInwardInvoice', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeinward',
            name='received_by',
            field=models.ForeignKey(related_name=b'received_by', blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeinward',
            name='store_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageStores', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeinward',
            name='to',
            field=models.ForeignKey(related_name=b'to', blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeinward',
            name='vendor_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeVendorWorkshop', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeincentiveloc',
            name='location',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeincentive',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeguardplacement',
            name='client_name',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeguardplacement',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeguardplacement',
            name='emp_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomegatepass',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomegatepass',
            name='emp_name',
            field=models.ForeignKey(related_name=b'emplo_name', to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomegatepass',
            name='issuedby',
            field=models.ForeignKey(related_name=b'issued_by', blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeexcesslocattendance',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeexcessattendance',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeeodforward',
            name='eod_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEodManagement', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeeodforward',
            name='forward_to',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeesettlement',
            name='designation',
            field=models.ForeignKey(to='myproject.PomeManageMasters'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeesettlement',
            name='emp_id',
            field=models.ForeignKey(to='myproject.PomeEmloyees'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeposting',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeposting',
            name='emp_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeemovement',
            name='client_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeemovement',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeemovement',
            name='emp_name',
            field=models.ForeignKey(related_name=b'emp_name', to='myproject.PomeEmloyees'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeemovement',
            name='gmo',
            field=models.ForeignKey(related_name=b'gmo', blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeemovement',
            name='order_by',
            field=models.ForeignKey(related_name=b'order_by', blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeemovement',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeexpenditure',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeexpenditure',
            name='emp_name',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeattendence',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeattendence',
            name='employee_id',
            field=models.ForeignKey(related_name=b'employees_id', to='myproject.PomeEmloyees'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeattendence',
            name='entered',
            field=models.ForeignKey(related_name=b'entered_name', blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemployeeattendence',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemploans',
            name='designation',
            field=models.ForeignKey(to='myproject.PomeManageMasters'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemploans',
            name='emp_id',
            field=models.ForeignKey(related_name=b'employee', to='myproject.PomeEmloyees'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeempadvances',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeempadvances',
            name='emp_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeemloyees',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomedisciplinecompliance',
            name='initiated_by',
            field=models.ForeignKey(related_name=b'initiated_by', to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomedisciplinecompliance',
            name='send_to',
            field=models.ForeignKey(related_name=b'send_to_whom', to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomecutsalary',
            name='employee',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomecustomerfeedback',
            name='customer_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomecustomerfeedback',
            name='work_order_no',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientpaymenttransactions',
            name='work_order_no',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientpatrolling',
            name='clientid',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientpatrolling',
            name='employeeid',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientinvoicetransactions',
            name='client_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientinvoicetransactions',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientinvoicetransactions',
            name='pome_client_invoice_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeClientInvoice', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientinvoicetransactions',
            name='work_order_no',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientinvoice',
            name='client_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientinvoice',
            name='work_order_no',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientbranches',
            name='client_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientbilling',
            name='client_name',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientbilling',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientbilling',
            name='work_order_no',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientattendance',
            name='client_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClients', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientattendance',
            name='employee_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeclientattendance',
            name='work_order',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageClientsLocations', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomebiodata',
            name='post_applied',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomebiodata',
            name='reference_by',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeallowancemaster',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeallowancemaster',
            name='employee_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeacknowledgement',
            name='designation',
            field=models.ForeignKey(blank=True, to='myproject.PomeManageMasters', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pomeacknowledgement',
            name='emp_id',
            field=models.ForeignKey(blank=True, to='myproject.PomeEmloyees', null=True),
            preserve_default=True,
        ),
    ]
